// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_queries.sql

package database

import (
	"context"
    _ "github.com/lib/pq"
	"github.com/google/uuid"
)

const findUser = `-- name: FindUser :one
SELECT id, username, email, password FROM "users"
WHERE (username = $1 OR email = $2)
`

type FindUserParams struct {
	Username string
	Email    string
}

func (q *Queries) FindUser(ctx context.Context, arg FindUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, findUser, arg.Username, arg.Email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.Password,
	)
	return i, err
}

const insertUser = `-- name: InsertUser :exec
INSERT INTO "users"(id, username, email, password)
VALUES ($1, $2, $3, $4)
`

type InsertUserParams struct {
	ID       uuid.UUID
	Username string
	Email    string
	Password string
}

func (q *Queries) InsertUser(ctx context.Context, arg InsertUserParams) error {
	_, err := q.db.ExecContext(ctx, insertUser,
		arg.ID,
		arg.Username,
		arg.Email,
		arg.Password,
	)
	return err
}
